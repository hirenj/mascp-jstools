#!/usr/bin/env node

repl = require('repl');
tools = require('./script_tools.js');

MASCP = require('./dist/js/maschup.services.js');
MASCP.events.once('ready',function() {
    repl.start("MASCP tools> ");
    for (func in tools) {
        repl.repl.context[func] = tools[func];
    }
    
    var old_completer = repl.repl.complete;    
    repl.repl.complete = function(line) {
    
        if (line.match(/\([^\)]*$/)) {            
            var func_parts = line.split(/\(/).reverse();
            var variables = func_parts.shift();
            var fname = func_parts.shift();
            var set_vars = variables.split(/,/).filter(function(v) { if (v == '') { return false; } return true; }).length;
            if (tools[fname]) {
                var func_def = tools[fname].toString();
                var match = func_def.match(/function\s*\(([^\)]*)\)/);
                if (match) {
                    var args = match[1].split(/,/);
                    if (set_vars == args.length) {
                        return [[line+")"],line];
                    }
                    args.splice(0,set_vars);
                    return [[line+(line.match(/[\(,]$/) ? '' : ',')+args[0]+((args.length == 1) ? ")" : ",")],line];
                }
            }
        }
    
        var comps = old_completer.call(repl.repl,line);
        comps[0].forEach(function(k,i) {
            if (tools[k]) {
                comps[0][i] += '(';
            }
        });
        return comps;
    };
});